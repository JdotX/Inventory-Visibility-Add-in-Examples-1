// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

let
    apiUrl = "https://" & EnvironmentURL & "/api/data/v9.1/is_onhandindexquerypreloads",
    fetchData = OData.Feed(
        apiUrl,
        null,
        [
            ODataVersion = 4,
            Implementation = "2.0"
        ]
    ),
    Source = fetchData,
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"is_batchid", type text}, {"is_colorid", type text}, {"is_configid", type text}, {"is_configversion", Int64.Type}, {"is_customdimension1", type text}, {"is_customdimension10", type text}, {"is_customdimension11", type text}, {"is_customdimension12", type text}, {"is_customdimension2", type text}, {"is_customdimension3", type text}, {"is_customdimension4", type text}, {"is_customdimension5", type text}, {"is_customdimension6", type text}, {"is_customdimension7", type text}, {"is_customdimension8", type text}, {"is_customdimension9", type text}, {"is_extendeddimension1", type text}, {"is_extendeddimension2", type text}, {"is_extendeddimension3", type text}, {"is_extendeddimension4", type text}, {"is_extendeddimension5", type text}, {"is_extendeddimension6", type text}, {"is_extendeddimension7", type text}, {"is_extendeddimension8", type text}, {"importsequencenumber", type text}, {"is_licenseplateid", type text}, {"is_locationid", type text}, {"is_onhandindexquerypreloadid", type text}, {"is_organizationid", type text}, {"is_partitionid", type text}, {"is_preloadsetnumber", type text}, {"is_productid", type text}, {"is_quantities", type text}, {"is_recid", type text}, {"is_serialid", type text}, {"is_siteid", type text}, {"is_sizeid", type text}, {"is_statusid", type text}, {"statuscode", type text}, {"statecode", type text}, {"is_styleid", type text}, {"timezoneruleversionnumber", type text}, {"utcconversiontimezonecode", type text}, {"is_versionid", type text}, {"versionnumber", Int64.Type}, {"is_wmslocationid", type text}, {"is_wmspalletid", type text}, {"owningbusinessunit", type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type","""""","""",Replacer.ReplaceText,{"is_quantities"}),
    #"Parsed JSON" = Table.TransformColumns(#"Replaced Value",{{"is_quantities", Json.Document}}),
    #"Expanded is_quantities" = Table.ExpandRecordColumn(#"Parsed JSON", "is_quantities", {"fno", "iv", "pbi", "@iv"}, {"is_quantities.fno", "is_quantities.iv", "is_quantities.pbi", "is_quantities.@iv"}),
    #"Expanded is_quantities.pbi" = Table.ExpandRecordColumn(#"Expanded is_quantities", "is_quantities.pbi", {"totalreserved", "received", "totalonhand", "totalavailphysical", "totalordered", "totalonorder", "returned", "totalsold", "othersupply", "otherdemand", "totalsoftreserved"}, {"is_quantities.pbi.totalreserved", "is_quantities.pbi.received", "is_quantities.pbi.totalonhand", "is_quantities.pbi.totalavailphysical", "is_quantities.pbi.totalordered", "is_quantities.pbi.totalonorder", "is_quantities.pbi.returned", "is_quantities.pbi.totalsold", "is_quantities.pbi.othersupply", "is_quantities.pbi.otherdemand", "is_quantities.pbi.totalsoftreserved"}),
    #"Expanded is_quantities.iv" = Table.ExpandRecordColumn(#"Expanded is_quantities.pbi", "is_quantities.iv", {"softreservphysical", "ordered", "softreserved", "softreservordered", "total onhand", "total available physical", "totalonhand", "availabletoreserve", "totalavailphysical", "totalavailable", "onhand"}, {"is_quantities.iv.softreservphysical", "is_quantities.iv.ordered", "is_quantities.iv.softreserved", "is_quantities.iv.softreservordered", "is_quantities.iv.total onhand", "is_quantities.iv.total available physical", "is_quantities.iv.totalonhand", "is_quantities.iv.availabletoreserve", "is_quantities.iv.totalavailphysical", "is_quantities.iv.totalavailable", "is_quantities.iv.onhand"}),
    #"Expanded is_quantities.fno" = Table.ExpandRecordColumn(#"Expanded is_quantities.iv", "is_quantities.fno", {"arrived", "availordered", "availphysical", "ordered", "physicalinvent", "postedqty", "reservordered", "reservphysical", "softreserved", "onorder"}, {"is_quantities.fno.arrived", "is_quantities.fno.availordered", "is_quantities.fno.availphysical", "is_quantities.fno.ordered", "is_quantities.fno.physicalinvent", "is_quantities.fno.postedqty", "is_quantities.fno.reservordered", "is_quantities.fno.reservphysical", "is_quantities.fno.softreserved", "is_quantities.fno.onorder"}),
    #"Expanded is_quantities.@iv" = Table.ExpandRecordColumn(#"Expanded is_quantities.fno", "is_quantities.@iv", {"@allocated", "@available_to_allocate"}, {"is_quantities.@iv.@allocated", "is_quantities.@iv.@available_to_allocate"}),
    #"Change Qty to decimal type" = Table.TransformColumnTypes(#"Expanded is_quantities.@iv",{{"is_quantities.fno.arrived", type number}, {"is_quantities.fno.availordered", type number}, {"is_quantities.fno.availphysical", type number}, {"is_quantities.fno.ordered", type number}, {"is_quantities.fno.physicalinvent", type number}, {"is_quantities.fno.postedqty", type number}, {"is_quantities.fno.reservordered", type number}, {"is_quantities.fno.reservphysical", type number}, {"is_quantities.fno.softreserved", type number}, {"is_quantities.fno.onorder", type number}, {"is_quantities.iv.softreservphysical", type number}, {"is_quantities.iv.ordered", type number}, {"is_quantities.iv.softreserved", type number}, {"is_quantities.iv.softreservordered", type number}, {"is_quantities.iv.total onhand", type number}, {"is_quantities.iv.total available physical", type number}, {"is_quantities.iv.totalonhand", type number}, {"is_quantities.iv.availabletoreserve", type number}, {"is_quantities.iv.totalavailphysical", type number}, {"is_quantities.iv.totalavailable", type number}, {"is_quantities.iv.onhand", type number}, {"is_quantities.pbi.totalreserved", type number}, {"is_quantities.pbi.received", type number}, {"is_quantities.pbi.totalonhand", type number}, {"is_quantities.pbi.totalavailphysical", type number}, {"is_quantities.pbi.totalordered", type number}, {"is_quantities.pbi.totalonorder", type number}, {"is_quantities.pbi.returned", type number}, {"is_quantities.pbi.totalsold", type number}, {"is_quantities.pbi.othersupply", type number}, {"is_quantities.pbi.otherdemand", type number}, {"is_quantities.pbi.totalsoftreserved", type number}, {"is_quantities.@iv.@allocated", type number}, {"is_quantities.@iv.@available_to_allocate", type number}}),
    #"Replace null with 0" = Table.ReplaceValue(#"Change Qty to decimal type",null,0,Replacer.ReplaceValue,{"is_quantities.fno.arrived", "is_quantities.fno.availordered", "is_quantities.fno.availphysical", "is_quantities.fno.ordered", "is_quantities.fno.physicalinvent", "is_quantities.fno.postedqty", "is_quantities.fno.reservordered", "is_quantities.fno.reservphysical", "is_quantities.fno.softreserved", "is_quantities.fno.onorder", "is_quantities.iv.softreservphysical", "is_quantities.iv.ordered", "is_quantities.iv.softreserved", "is_quantities.iv.softreservordered", "is_quantities.iv.total onhand", "is_quantities.iv.total available physical", "is_quantities.iv.totalonhand", "is_quantities.iv.availabletoreserve", "is_quantities.iv.totalavailphysical", "is_quantities.iv.totalavailable", "is_quantities.iv.onhand", "is_quantities.pbi.totalreserved", "is_quantities.pbi.received", "is_quantities.pbi.totalonhand", "is_quantities.pbi.totalavailphysical", "is_quantities.pbi.totalordered", "is_quantities.pbi.totalonorder", "is_quantities.pbi.returned", "is_quantities.pbi.totalsold", "is_quantities.pbi.othersupply", "is_quantities.pbi.otherdemand", "is_quantities.pbi.totalsoftreserved", "is_quantities.@iv.@allocated", "is_quantities.@iv.@available_to_allocate"})
in
    #"Replace null with 0"